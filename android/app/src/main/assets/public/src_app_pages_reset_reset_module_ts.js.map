{"version":3,"file":"src_app_pages_reset_reset_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEd;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,kDAAS;KACrB;CACF,CAAC;IAMW,sBAAsB,SAAtB,sBAAsB;CAAG;AAAzB,sBAAsB;IAJlC,uDAAQ,CAAC;QACR,OAAO,EAAE,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,yDAAY,CAAC;KACxB,CAAC;GACW,sBAAsB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;AChBM;AACM;AACkB;AAEpB;AAEmB;AAEvB;IAY5B,eAAe,SAAf,eAAe;CAAG;AAAlB,eAAe;IAV3B,uDAAQ,CAAC;QACR,OAAO,EAAE;YACP,yDAAY;YACZ,uDAAW;YACX,uDAAW;YACX,yEAAsB;YACtB,+DAAmB;SACpB;QACD,YAAY,EAAE,CAAC,kDAAS,CAAC;KAC1B,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpB5B;AACA;AACA;AACA;AACA;IAQaM,SAAS,SAATA,SAAS;EAEpBC,YACUC,eADV,EAEUC,GAFV,EAEgC;IADtB;IACA;IAEV,YAAK;MACHC,KAAK,EAAC;IADH,CAAL;IAIA,eAAQ,CACN;MAACC,IAAI,EAAE,UAAP;MAAmBC,OAAO,EAAE;IAA5B,CADM,CAAR;IAIA,qBAAe,IAAIV,qDAAJ,CAAc;MAC3BW,SAAS,EAAE,IAAIV,uDAAJ,CAAgB,EAAhB,EAAmB,CAACC,+DAAD,CAAnB;IADgB,CAAd,CAAf;IAgBA,kBAAW,+BAAX;IACA,oBAAa,KAAb;EA3BqC;;EAc/BW,YAAY,CAACC,QAAD,EAAmB;IAAA;;IAAA;MACnC,MAAMC,KAAK,SAAS,KAAI,CAACT,eAAL,CAAqBU,MAArB,CAA4B;QAC9CC,OAAO,EAAE,4CAA0C,KAAI,CAACC,IAAL,CAAUV,KADf;QAE9CW,QAAQ,EAAE,IAFoC;QAG9CL,QAAQ,EAAEA,QAHoC;QAI9CM,IAAI,EAAE,MAJwC;QAK9C;QACAC,KAAK,EAAE;MANuC,CAA5B,CAApB;MAQA,MAAMN,KAAK,CAACO,OAAN,EAAN;IATmC;EAUpC;;EAKDC,SAAS;IACP,KAAKC,YAAL,GAAkB,KAAlB;;IACA,IAAG,CAAC,KAAKC,aAAL,CAAmBC,KAAvB,EAA6B;MAC3B,OAAO,KAAP;IACD,CAFD,MAEO;MAEL,IAAIC,UAAU,GAAG,KAAKpB,GAAL,CAASqB,gBAAT,CAA0B,KAAKV,IAAL,CAAUV,KAApC,CAAjB;;MAEA,IAAGmB,UAAU,CAACE,MAAX,CAAkBC,MAAlB,IAA4B,CAA/B,EAAiC;QAC/B,KAAKN,YAAL,GAAkB,IAAlB;MACD,CAFD,MAEO;QACL,KAAKX,YAAL,CAAkB,QAAlB;MACD;IAEF;EACF;;EAEDkB,QAAQ;IACN,KAAKxB,GAAL,CAASyB,UAAT;EACD;;AApDmB;;;QAXbjC,2DAAeA;;QAGfI,4EAAiBA;;;AAQbC,SAAS,sDANrBN,wDAAS,CAAC;EACTmC,QAAQ,EAAE,WADD;EAETC,UAAAA,wDAFS;;AAAA,CAAD,CAMY,GAAT9B,SAAS,CAAT","sources":["./src/app/pages/reset/reset-routing.module.ts","./src/app/pages/reset/reset.module.ts","./src/app/pages/reset/reset.page.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ResetPage } from './reset.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ResetPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ResetPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ResetPageRoutingModule } from './reset-routing.module';\n\nimport { ResetPage } from './reset.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ResetPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [ResetPage]\n})\nexport class ResetPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { ApiUsuarioService } from '../../services/api-usuario.service';\n\n@Component({\n  selector: 'app-reset',\n  templateUrl: './reset.page.html',\n  styleUrls: ['./reset.page.scss'],\n})\n\nexport class ResetPage implements OnInit {\n\n  constructor(\n    private toastController: ToastController,\n    private api: ApiUsuarioService) { }\n\n  user={\n    email:\"\"\n  }\n\n  errores=[\n    {tipo: 'required', mensaje: 'Campo no debe estar vacio'},\n  ]\n\n  recuperarForm= new FormGroup({\n    emailForm: new FormControl('',[Validators.required]),\n  });\n\n  async presentToast(position: 'bottom') {\n    const toast = await this.toastController.create({\n      message: 'Se ha enviado código de confirmación a '+this.user.email,\n      duration: 4000,\n      position: position,\n      icon: 'mail',\n      //cssClass: 'custom-toast',\n      color: \"dark\"\n    });\n    await toast.present();\n  }\n\n  datosError=\"Ese correo no esta registrado\"\n  errorBoolean=false;\n\n  verificar(){\n    this.errorBoolean=false;\n    if(!this.recuperarForm.valid){\n      return false;\n    } else {\n\n      let usuarioApi = this.api.consultarUsuario(this.user.email);\n\n      if(usuarioApi.correo.length <= 1){\n        this.errorBoolean=true;\n      } else {\n        this.presentToast('bottom');\n      }\n\n    }\n  }\n\n  ngOnInit() {\n    this.api.funcionGet();\n  }\n\n}\n"],"names":["Component","ToastController","FormGroup","FormControl","Validators","ApiUsuarioService","ResetPage","constructor","toastController","api","email","tipo","mensaje","emailForm","required","presentToast","position","toast","create","message","user","duration","icon","color","present","verificar","errorBoolean","recuperarForm","valid","usuarioApi","consultarUsuario","correo","length","ngOnInit","funcionGet","selector","template"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}